"""Adds tables for parsing usda agg data

Revision ID: f702b4799b99
Revises: dddceb6761a9
Create Date: 2024-11-06 20:50:41.269458

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f702b4799b99"
down_revision: Union[str, None] = "dddceb6761a9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "acquisition_samples",
        sa.Column("fdc_id_of_sample_food", sa.Integer(), nullable=False),
        sa.Column("fdc_id_of_acquisition_food", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id_of_sample_food"),
    )
    op.create_table(
        "agricultural_samples",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("acquisition_date", sa.Date(), nullable=True),
        sa.Column("market_class", sa.String(), nullable=True),
        sa.Column("treatment", sa.String(), nullable=True),
        sa.Column("state", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "branded_foods",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("brand_owner", sa.String(), nullable=True),
        sa.Column("brand_name", sa.String(), nullable=True),
        sa.Column("subbrand_name", sa.String(), nullable=True),
        sa.Column("gtin_upc", sa.Integer(), nullable=True),
        sa.Column("ingredients", sa.String(), nullable=True),
        sa.Column("serving_size", sa.Float(), nullable=True),
        sa.Column("serving_size_unit", sa.String(), nullable=True),
        sa.Column("household_serving_fulltext", sa.String(), nullable=True),
        sa.Column("branded_food_category", sa.String(), nullable=True),
        sa.Column("data_source", sa.String(), nullable=True),
        sa.Column("package_weight", sa.Float(), nullable=True),
        sa.Column("modified_date", sa.Date(), nullable=True),
        sa.Column("available_date", sa.Date(), nullable=True),
        sa.Column("market_country", sa.String(), nullable=True),
        sa.Column("discontinued_date", sa.Date(), nullable=True),
        sa.Column("preparation_state_code", sa.String(), nullable=True),
        sa.Column("trade_channel", sa.String(), nullable=True),
        sa.Column("short_description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "fndds_derivation",
        sa.Column("derivation_code", sa.String(), nullable=False),
        sa.Column("derivation_description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("derivation_code"),
    )
    op.create_table(
        "food_attribute",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fdc_id", sa.Integer(), nullable=True),
        sa.Column("seq_num", sa.Float(), nullable=True),
        sa.Column("food_attribute_type_id", sa.Float(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_attribute_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_calorie_conversion_factor",
        sa.Column("food_nutrient_conversion_factor_id", sa.Float(), nullable=False),
        sa.Column("protein_value", sa.Float(), nullable=True),
        sa.Column("fat_value", sa.Float(), nullable=True),
        sa.Column("carbohydrate_value", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("food_nutrient_conversion_factor_id"),
    )
    op.create_table(
        "food_category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fdc_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("pct_weight", sa.Float(), nullable=True),
        sa.Column("is_refuse", sa.String(), nullable=True),
        sa.Column("gram_weight", sa.Float(), nullable=True),
        sa.Column("data_points", sa.Integer(), nullable=True),
        sa.Column("min_year_acquired", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_nutrient",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fdc_id", sa.Integer(), nullable=True),
        sa.Column("nutrient_id", sa.Integer(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("data_points", sa.Float(), nullable=True),
        sa.Column("derivation_id", sa.Float(), nullable=True),
        sa.Column("min", sa.Float(), nullable=True),
        sa.Column("max", sa.Float(), nullable=True),
        sa.Column("median", sa.Float(), nullable=True),
        sa.Column("loq", sa.Float(), nullable=True),
        sa.Column("footnote", sa.String(), nullable=True),
        sa.Column("min_year_acquired", sa.Float(), nullable=True),
        sa.Column("percent_daily_value", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_nutrient_conversion_factor",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fdc_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("data_type", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("food_category_id", sa.String(), nullable=True),
        sa.Column("publication_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "lab_method",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("technique", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lab_method_code",
        sa.Column("lab_method_id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("lab_method_id"),
    )
    op.create_table(
        "lab_method_nutrient",
        sa.Column("lab_method_id", sa.Integer(), nullable=False),
        sa.Column("nutrient_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("lab_method_id"),
    )
    op.create_table(
        "market_acquisition",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("brand_description", sa.String(), nullable=True),
        sa.Column("expiration_date", sa.Date(), nullable=True),
        sa.Column("label_weight", sa.Float(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("acquisition_date", sa.Date(), nullable=True),
        sa.Column("sales_type", sa.String(), nullable=True),
        sa.Column("sample_lot_nbr", sa.String(), nullable=True),
        sa.Column("sell_by_date", sa.Date(), nullable=True),
        sa.Column("store_city", sa.String(), nullable=True),
        sa.Column("store_name", sa.String(), nullable=True),
        sa.Column("store_state", sa.String(), nullable=True),
        sa.Column("upc_code", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "measure_unit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "microbe",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("foodId", sa.Integer(), nullable=True),
        sa.Column("method", sa.String(), nullable=True),
        sa.Column("microbe_code", sa.String(), nullable=True),
        sa.Column("min_value", sa.Integer(), nullable=True),
        sa.Column("max_value", sa.Float(), nullable=True),
        sa.Column("uom", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nutrient",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("unit_name", sa.String(), nullable=True),
        sa.Column("nutrient_nbr", sa.Float(), nullable=True),
        sa.Column("rank", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "retention_factor",
        sa.Column("gid", sa.Integer(), nullable=False),
        sa.Column("code", sa.Integer(), nullable=True),
        sa.Column("foodGroupId", sa.Integer(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("gid"),
    )
    op.create_table(
        "sample_food",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "sr_legacy_food",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("NDB_number", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "sub_sample_food",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("fdc_id_of_sample_food", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "sub_sample_result",
        sa.Column("food_nutrient_id", sa.Integer(), nullable=False),
        sa.Column("adjusted_amount", sa.Float(), nullable=True),
        sa.Column("lab_method_id", sa.Integer(), nullable=True),
        sa.Column("nutrient_name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("food_nutrient_id"),
    )
    op.create_table(
        "survey_fndds_food",
        sa.Column("fdc_id", sa.Integer(), nullable=False),
        sa.Column("food_code", sa.Integer(), nullable=True),
        sa.Column("wweia_category_code", sa.Integer(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("fdc_id"),
    )
    op.create_table(
        "wweia_food_category",
        sa.Column("wweia_food_category", sa.Integer(), nullable=False),
        sa.Column("wweia_food_category_description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("wweia_food_category"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("wweia_food_category")
    op.drop_table("survey_fndds_food")
    op.drop_table("sub_sample_result")
    op.drop_table("sub_sample_food")
    op.drop_table("sr_legacy_food")
    op.drop_table("sample_food")
    op.drop_table("retention_factor")
    op.drop_table("nutrient")
    op.drop_table("microbe")
    op.drop_table("measure_unit")
    op.drop_table("market_acquisition")
    op.drop_table("lab_method_nutrient")
    op.drop_table("lab_method_code")
    op.drop_table("lab_method")
    op.drop_table("foods")
    op.drop_table("food_nutrient_conversion_factor")
    op.drop_table("food_nutrient")
    op.drop_table("food_component")
    op.drop_table("food_category")
    op.drop_table("food_calorie_conversion_factor")
    op.drop_table("food_attribute_type")
    op.drop_table("food_attribute")
    op.drop_table("fndds_derivation")
    op.drop_table("branded_foods")
    op.drop_table("agricultural_samples")
    op.drop_table("acquisition_samples")
    # ### end Alembic commands ###
