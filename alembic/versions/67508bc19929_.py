"""empty message

Revision ID: 67508bc19929
Revises: dddceb6761a9
Create Date: 2024-12-09 00:42:50.529322

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '67508bc19929'
down_revision: Union[str, None] = 'dddceb6761a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('foodentry',
    sa.Column('food_name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('portion_size', sa.JSON(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('macronutrients', sa.JSON(), nullable=True),
    sa.Column('micronutrients', sa.JSON(), nullable=True),
    sa.Column('fiber_content', sa.String(), nullable=True),
    sa.Column('sugar', sa.JSON(), nullable=True),
    sa.Column('cholesterol', sa.String(), nullable=True),
    sa.Column('sodium', sa.String(), nullable=True),
    sa.Column('fats', sa.JSON(), nullable=True),
    sa.Column('common_allergens', sa.JSON(), nullable=True),
    sa.Column('dietary_tags', sa.JSON(), nullable=True),
    sa.Column('custom_recipes', sa.JSON(), nullable=True),
    sa.Column('favorite_foods', sa.JSON(), nullable=True),
    sa.Column('user_notes', sa.String(), nullable=True),
    sa.Column('barcode_scanner', sa.String(), nullable=True),
    sa.Column('photo_upload', sa.String(), nullable=True),
    sa.Column('ingredient_breakdown', sa.JSON(), nullable=True),
    sa.Column('historical_data', sa.JSON(), nullable=True),
    sa.Column('ai_recommendations', sa.JSON(), nullable=True),
    sa.Column('wearables_integration', sa.JSON(), nullable=True),
    sa.Column('grocery_list', sa.JSON(), nullable=True),
    sa.Column('hydration_tracking', sa.JSON(), nullable=True),
    sa.Column('energy_level_correlation', sa.JSON(), nullable=True),
    sa.Column('symptoms_tracking', sa.JSON(), nullable=True),
    sa.Column('sharing_options', sa.JSON(), nullable=True),
    sa.Column('progress_sharing', sa.JSON(), nullable=True),
    sa.Column('streaks_and_achievements', sa.JSON(), nullable=True),
    sa.Column('daily_goals', sa.JSON(), nullable=True),
    sa.Column('graphs_and_charts', sa.JSON(), nullable=True),
    sa.Column('weekly_summaries', sa.JSON(), nullable=True),
    sa.Column('diet_comparison', sa.JSON(), nullable=True),
    sa.Column('multi_language_support', sa.JSON(), nullable=True),
    sa.Column('offline_mode', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_time', sa.DateTime(), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_foodentry_id'), 'foodentry', ['id'], unique=False)
    op.create_table('user',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_time', sa.DateTime(), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userdb_id'), 'userdb', ['id'], unique=False)
    op.drop_table('retention_factor')
    op.drop_index('ix_food_entries_id', table_name='food_entries')
    op.drop_table('food_entries')
    op.drop_table('food_category')
    op.drop_table('food_nutrient_conversion_factor')
    op.drop_table('foundation_food')
    op.drop_table('food_nutrient_derivation')
    op.drop_table('measure_unit')
    op.drop_table('food_component')
    op.drop_table('food_nutrient_source')
    op.drop_table('sub_sample_food')
    op.drop_table('sample_food')
    op.drop_table('nutrient')
    op.drop_table('sub_sample_result')
    op.drop_table('market_acquisition')
    op.drop_table('lab_method')
    op.drop_table('food_nutrient')
    op.drop_table('input_food')
    op.drop_table('lab_method_code')
    op.drop_table('food_attribute')
    op.drop_table('food')
    op.drop_table('food_protein_conversion_factor')
    op.drop_table('food_update_log_entry')
    op.drop_table('food_portion')
    op.drop_table('survey_fndds_food')
    op.drop_table('microbe')
    op.drop_table('wweia_food_category')
    op.drop_table('food_attribute_type')
    op.drop_table('sr_legacy_food')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('sr_legacy_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('NDB_number', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_attribute_type',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('wweia_food_category',
    sa.Column('wweia_food_category', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('wweia_food_category_description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('microbe',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('foodId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('method', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('microbe_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('min_value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('max_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('uom', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('survey_fndds_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('food_code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('wweia_category_code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_portion',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('measure_unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('portion_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('modifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('data_points', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('footnote', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('min_year_acquired', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('food_update_log_entry',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_updated', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_protein_conversion_factor',
    sa.Column('food_nutrient_conversion_factor_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('data_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('food_category_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('publication_date', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_attribute',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('food_attribute_type_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('lab_method_code',
    sa.Column('lab_method_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('input_food',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id_of_input_food', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sr_code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('sr_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('portion_code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('portion_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('retention_code', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_nutrient',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('data_points', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('derivation_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('min', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('median', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loq', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('footnote', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('min_year_acquired', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percent_daily_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('lab_method',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('technique', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('market_acquisition',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('brand_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expiration_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('label_weight', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('acquisition_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sales_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sample_lot_nbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sell_by_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('upc_code', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('sub_sample_result',
    sa.Column('food_nutrient_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('adjusted_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lab_method_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('nutrient',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_nbr', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('rank', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('sample_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('sub_sample_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id_of_sample_food', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_nutrient_source',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_component',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pct_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_refuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('data_points', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('min_year_acquired', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('measure_unit',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_nutrient_derivation',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('foundation_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('NDB_number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('footnote', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_nutrient_conversion_factor',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_category',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_entries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('food_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('calories', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='food_entries_pkey')
    )
    op.create_index('ix_food_entries_id', 'food_entries', ['id'], unique=False)
    op.create_table('retention_factor',
    sa.Column('gid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('food_group_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_userdb_id'), table_name='userdb')
    op.drop_table('userdb')
    op.drop_index(op.f('ix_foodentry_id'), table_name='foodentry')
    op.drop_table('foodentry')
    # ### end Alembic commands ###
